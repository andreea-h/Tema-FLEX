variable y ::= { a, b, c } ;

grammar1 ::= Grammar (
	nonterminals :: { S, S1, S2 } ;
	alphabet :: { a, b, c } ;
	start_symbol :: S ;
	
	S -> y&S | a&S1 ;
	S1 -> b&S2 | e ;
	S2 -> a&S2 | y ;
) ;;

grammar2 ::= Grammar (
	nonterminals :: { S1, S2 } ;
	alphabet :: { a, b, c } ;
	start_symbol :: S1 ;
	
	S1 -> y&S2 ;
	S2 -> y&S1 | e ;
) ;;

automata1 ::= PushDownAutomata (
	alphabet :: { a, b, c, d } ;
	stack_alphabet :: { Z0, X } ;
	states :: { q0, q1, q2, q3, q4 } ;
	final_states :: { q4 } ;
	initial_state :: q0 ;
	variable y ::= { a, b } ;
	
	q0 -> (
		y, z0 / X&Z0 -> q1 ;
	) ;
	
	q1 -> (
		a, X / X&X -> q1 ;
		b, X / e -> q2 ;
	) ;
	
	q2 -> (
		b, X / e -> q2 ;
		c, Z0 / X&Z0 -> q3 ;
	) ;
	
	q3 -> (
		c, X / X&X -> q3 ;
		d, X / e -> q4 ;
	) ;
	
	q4 -> (
		d, X / e -> q4 ;
		e, Z0 / Z0 -> q4 ;
	) ;
) ;;
