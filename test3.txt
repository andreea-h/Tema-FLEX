/*automat cu stiva pentru 0^n 1^n U 0^n 1^(2n), n >= 1*/
automata0 ::= PushDownAutomata (
	alphabet :: { 1, 0 } ;
	states :: { q0, q1, q2, q3, q4, q5, q6 } ;
	stack_alphabet :: { Z0, 0, 1 } ; 
	initial_state :: q0 ;

	%Aceasta linie reprezinta un comentariu
	q0 -> (
		e, Z0 / Z0 -> q1 ;
		e, Z0 / Z0 -> q2 ;
	) ;
	
	q1 -> (
		0, Z0 / 0&Z0 -> q1 ; 
		0, Z0 / 0&0 -> q1 ; 
		1, 0 / e -> q3 ;
	) ;
	
	q2 -> (
		0, Z0 / 0&0&Z0 -> q2 ; 
		0, 0 / 0&0&0 -> q4 ;  
	) ;
	
	%comment3
	
	q3 -> (
		1, 0 / e -> q3 ;
		e, Z0 / Z0 -> q5 ;
	) ;
	
	q4 -> (
		1, 0 / e -> q4 ;
		e, Z0 / Z0 -> q6 ;
	) ;
	
	final_states :: { q5, q6 } ;
) ;;


/*gramatica independenta de context*/
grammar1 ::= Grammar (
	nonterminals :: { S } ;
	alphabet :: { a, b } ;
	start_symbol :: S ;
	
	S -> a&S&b | a&b ;
) ;;

/*gramatica pentru a^nb^m -> GR*/
/*
definitia comentata va fi ignorata
grammar2 ::= Grammar (
	nonterminals :: { S, B } ;
	alphabet :: { a, b } ;
	start_symbol :: S ;
	
	S -> a&S | b&B ;
	B -> bB | e ;
) ;;
*/
% gramatica pentru w din {a, b}* cu |w|=2k -> gramatica regulata
grammar3 ::= Grammar (
	nonterminals :: { S } ;
	alphabet :: { a, b } ;
	start_symbol :: S ;
	
	S -> a&a&S | a&b&S | b&a&S | b&b&S | e ;
) ;;


% gdc pentru a^ib^ic^i
grammar4 ::= Grammar (
	nonterminals :: { S, T, A, B, C } ;
	alphabet :: { a, b, c } ;
	start_symbol :: S ;
	
	%apare tranzitia S->e dar S nu mai apare in partea dreapta a nici unei alte productii
	S -> e | T ;
	T -> a&T&B&C | a&B&C ;
	C&B -> B&C ;
	a&B -> a&b ;
	b&B -> b&b ;
	c&C -> c&C ;
	b&C -> b&c ;
) ;;

/* gramatica regulata pentru (0+1)*011 */
grammar5 ::= Grammar (
	nonterminals :: { S, A, B } ;
	alphabet :: { 0, 1 } ;
	start_symbol :: S ;
	
	S -> 0&S | 0&A | 1&S ;
	A -> 1&B ;
	B -> 1 ;
) ;;

% GR
/*gramatica regulata pentru w din {a, b}*| w contine 3 b-uri*/
grammar6 ::= Grammar (
	nonterminals :: { S, S1, S2, S3 } ;
	alphabet :: { a, b } ;
	start_symbol :: S ;
	
	S -> a&S | b&S1 ;
	S1 -> a&S1 | b&S2 ;
	S2 -> a&S2 | b&S3 ;
	S3 -> a&S3 | e ;
) ;;

% GIC
/*{ w din {a,b}* | w0 = w(n-1) }*/
grammar7 ::= Grammar (
	nonterminals :: { S, S1 } ;
	alphabet :: { a, b } ;
	start_symbol :: S ;
	
	S -> a&S1&a | b&S1&b ;
	S1 -> a&S1 | b&S1 | e ;
) ;;

% GIC
/*{ a^m b^n c^p d^q | m + n = p + q, m, n, p, q > 0 }*/
grammar8 ::= Grammar (
	nonterminals :: { S, A, B, C } ;
	alphabet :: { a, b, c, d } ;
	start_symbol :: S ;
	
	S -> a&S&d | A | b&C&d ;
	%A -> a&A&c | B ;
	B -> b&B&c | e ;
	C -> b&C&d | B ;
) ;;

variable y ::= { c, a } ;

automata0 ::= PushDownAutomata (
	alphabet :: { a, b, c } ; %automatul pentru w din {a, b, c}* unde #a(w)+#b(w)=#c(w)
	states :: { q0 } ;
	initial_state :: q0 ; 
	stack_alphabet :: { Z0, X, Y } ;
	q0 -> ( 
		a, Z0 / X&Z0 -> q0 ;
		b, Z0 / X&Z0 -> q0 ;
		c, Z0 / Y&Z0 -> q0 ;
		a, Y / e -> q0 ;
		b, Y / e -> q0 ;
		c, X / e -> q0 ;
		e, Z0 / e -> q0 ;
		a, X / X&X -> q0 ;
		b, X / X&X -> q0 ;
		y, Y / Y&Y -> q0 ; 
	) ;
) ;;

% Automat pentru a^n c b^n cu n >= 1 si acceptare prin stari finale
automata1 ::= PushDownAutomata (
	alphabet :: { a, b, c } ;
	states :: { q0, q1, q2, q3 } ;
	initial_state :: q0 ;
	final_states :: { q1, q3 } ;
	stack_alphabet :: { Z0, a, b, c } ; /*alfabetul stivei*/
	variable y ::= { a, b } ; /*variabila locala este cea explicitata la tranzitie de mai jos*/
	
	%Aceasta linie reprezinta un comentariu
	q0 -> (
		a, Z0 / a&Z0 -> q1 ;
	) ;
	
	q1 -> (
		c, a / a -> q2 ; 
		y, a / a&a -> q1 ; %comment1
	) ;
	
	q2 -> (
		b, a / e -> q3 ;       
	) ;
	
	%comment3
	
	q3 -> (
		b, a / e -> q3 ;%comment2
	) ;
) ;;





